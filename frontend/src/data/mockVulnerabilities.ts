import { Vulnerability } from '../types/vulnerability.types';

const mockVulnerabilities: Vulnerability[] = [
  {
    id: '1',
    name: 'CVE-2023-1234',
    type: 'SQL Injection',
    cvssScore: 9.8,
    severityLevel: 'Critical',
    affectedAssets: ['Database Server', 'Web Application'],
    discoveryDate: new Date('2023-06-15'),
    status: 'Not Fixed',
    description: 'SQL injection vulnerability in login form allows attackers to bypass authentication and execute arbitrary SQL commands. This can lead to unauthorized access to sensitive data, modification of database content, or complete system compromise.',
    recommendations: 'Use prepared statements and parameterized queries instead of dynamic SQL. Implement input validation and sanitization. Apply the principle of least privilege to database accounts.',
    cveReferences: ['CVE-2023-1234', 'NIST-2023-1234'],
    vector: 'CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H',
    exploitAvailable: true,
    patchAvailable: true,
    assignedTo: 'Security Team',
    lastUpdated: new Date('2023-06-20'),
    tags: ['database', 'authentication', 'critical']
  },
  {
    id: '2',
    name: 'CVE-2023-5678',
    type: 'Cross-Site Scripting (XSS)',
    cvssScore: 7.5,
    severityLevel: 'High',
    affectedAssets: ['Web Application', 'Customer Portal'],
    discoveryDate: new Date('2023-07-22'),
    status: 'In Progress',
    description: 'Stored XSS vulnerability in comment section allows attackers to inject malicious scripts that execute when other users view the affected page. This can lead to cookie theft, session hijacking, or credential harvesting.',
    recommendations: 'Implement proper output encoding for all user-generated content. Use Content Security Policy (CSP) headers to restrict script execution. Consider implementing a Web Application Firewall.',
    cveReferences: ['CVE-2023-5678'],
    vector: 'CVSS:3.1/AV:N/AC:L/PR:L/UI:R/S:U/C:H/I:H/A:L',
    exploitAvailable: true,
    patchAvailable: false,
    assignedTo: 'Web Development Team',
    lastUpdated: new Date('2023-08-01'),
    tags: ['web', 'xss', 'user-input']
  },
  {
    id: '3',
    name: 'CVE-2023-9012',
    type: 'Outdated Library',
    cvssScore: 5.4,
    severityLevel: 'Medium',
    affectedAssets: ['API Server', 'Authentication Service'],
    discoveryDate: new Date('2023-08-05'),
    status: 'Fixed',
    description: 'Outdated cryptographic library contains known vulnerabilities that could potentially allow attackers to decrypt sensitive information or bypass authentication mechanisms.',
    recommendations: 'Update to the latest version of the library. Implement a software composition analysis tool to regularly scan for outdated dependencies.',
    cveReferences: ['CVE-2023-9012'],
    vector: 'CVSS:3.1/AV:N/AC:H/PR:N/UI:N/S:U/C:H/I:L/A:N',
    exploitAvailable: false,
    patchAvailable: true,
    assignedTo: 'DevOps Team',
    lastUpdated: new Date('2023-08-15'),
    tags: ['library', 'crypto', 'dependency']
  },
  {
    id: '4',
    name: 'CVE-2023-3456',
    type: 'Insecure Configuration',
    cvssScore: 4.2,
    severityLevel: 'Medium',
    affectedAssets: ['Load Balancer', 'Reverse Proxy'],
    discoveryDate: new Date('2023-09-18'),
    status: 'Not Fixed',
    description: 'Insecure TLS configuration allows downgrade attacks, potentially exposing encrypted communications to interception or manipulation.',
    recommendations: 'Update TLS configuration to use secure protocols and ciphers only. Disable TLS 1.0/1.1 and weak cipher suites. Implement regular security configuration audits.',
    cveReferences: ['CVE-2023-3456'],
    vector: 'CVSS:3.1/AV:N/AC:H/PR:N/UI:R/S:U/C:H/I:N/A:N',
    exploitAvailable: false,
    patchAvailable: true,
    assignedTo: 'Network Team',
    lastUpdated: new Date('2023-09-25'),
    tags: ['configuration', 'tls', 'network']
  },
  {
    id: '5',
    name: 'CVE-2023-7890',
    type: 'Path Traversal',
    cvssScore: 8.1,
    severityLevel: 'High',
    affectedAssets: ['File Server', 'Document Management System'],
    discoveryDate: new Date('2023-10-30'),
    status: 'In Progress',
    description: 'Path traversal vulnerability allows unauthorized access to files outside the intended directory, potentially exposing sensitive configuration files or system information.',
    recommendations: 'Implement proper input validation and path normalization. Use a whitelist approach for allowed file paths. Consider implementing file access controls at the application level.',
    cveReferences: ['CVE-2023-7890'],
    vector: 'CVSS:3.1/AV:N/AC:L/PR:L/UI:N/S:U/C:H/I:H/A:N',
    exploitAvailable: true,
    patchAvailable: true,
    assignedTo: 'Security Team',
    lastUpdated: new Date('2023-11-05'),
    tags: ['filesystem', 'access-control']
  },
  {
    id: '6',
    name: 'CVE-2023-2468',
    type: 'Denial of Service',
    cvssScore: 6.5,
    severityLevel: 'Medium',
    affectedAssets: ['API Gateway'],
    discoveryDate: new Date('2023-11-12'),
    status: 'Not Fixed',
    description: 'Resource exhaustion vulnerability allows attackers to cause denial of service by sending specially crafted requests that consume excessive CPU or memory resources.',
    recommendations: 'Implement rate limiting and resource quotas. Add request validation to reject malformed inputs early. Consider implementing circuit breakers for critical services.',
    cveReferences: ['CVE-2023-2468'],
    vector: 'CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H',
    exploitAvailable: false,
    patchAvailable: false,
    assignedTo: 'API Team',
    lastUpdated: new Date('2023-11-20'),
    tags: ['dos', 'api', 'performance']
  },
  {
    id: '7',
    name: 'CVE-2023-1357',
    type: 'Authentication Bypass',
    cvssScore: 9.1,
    severityLevel: 'Critical',
    affectedAssets: ['User Management System', 'Admin Portal'],
    discoveryDate: new Date('2023-12-05'),
    status: 'Fixed',
    description: 'Authentication bypass vulnerability allows unauthorized access to administrative functions by manipulating session tokens or exploiting flaws in the authentication logic.',
    recommendations: 'Implement proper authentication checks and session management. Use secure session handling mechanisms. Consider implementing multi-factor authentication for administrative access.',
    cveReferences: ['CVE-2023-1357'],
    vector: 'CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:C/C:H/I:H/A:N',
    exploitAvailable: true,
    patchAvailable: true,
    assignedTo: 'Security Team',
    lastUpdated: new Date('2023-12-10'),
    tags: ['authentication', 'admin', 'critical']
  },
  {
    id: '8',
    name: 'CVE-2024-0123',
    type: 'Information Disclosure',
    cvssScore: 5.3,
    severityLevel: 'Medium',
    affectedAssets: ['Customer Database', 'Reporting Service'],
    discoveryDate: new Date('2024-01-15'),
    status: 'Not Fixed',
    description: 'Information disclosure vulnerability exposes sensitive customer data through error messages or improperly configured API endpoints.',
    recommendations: 'Implement proper error handling to avoid leaking sensitive information. Review and secure all API endpoints. Conduct a thorough review of data exposure points.',
    cveReferences: ['CVE-2024-0123'],
    vector: 'CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:N/A:N',
    exploitAvailable: false,
    patchAvailable: true,
    assignedTo: 'Data Team',
    lastUpdated: new Date('2024-01-20'),
    tags: ['data-leakage', 'api', 'privacy']
  },
  {
    id: '9',
    name: 'CVE-2024-0456',
    type: 'Broken Access Control',
    cvssScore: 7.8,
    severityLevel: 'High',
    affectedAssets: ['User Portal', 'Account Management'],
    discoveryDate: new Date('2024-02-08'),
    status: 'In Progress',
    description: 'Broken access control vulnerability allows users to access or modify data belonging to other users by manipulating request parameters or API endpoints.',
    recommendations: 'Implement proper authorization checks for all sensitive operations. Use server-side validation of user permissions. Consider implementing a comprehensive access control framework.',
    cveReferences: ['CVE-2024-0456'],
    vector: 'CVSS:3.1/AV:N/AC:L/PR:L/UI:N/S:U/C:H/I:H/A:N',
    exploitAvailable: true,
    patchAvailable: false,
    assignedTo: 'Security Team',
    lastUpdated: new Date('2024-02-15'),
    tags: ['access-control', 'authorization', 'user-data']
  },
  {
    id: '10',
    name: 'CVE-2024-0789',
    type: 'Server-Side Request Forgery (SSRF)',
    cvssScore: 8.6,
    severityLevel: 'High',
    affectedAssets: ['Internal API', 'Cloud Infrastructure'],
    discoveryDate: new Date('2024-03-01'),
    status: 'Not Fixed',
    description: 'SSRF vulnerability allows attackers to make requests from the server to internal resources or services, potentially bypassing network security controls.',
    recommendations: 'Implement strict input validation and URL filtering. Use allowlists for permitted domains and IP ranges. Consider implementing network-level protections against internal requests from public-facing services.',
    cveReferences: ['CVE-2024-0789'],
    vector: 'CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:C/C:H/I:L/A:N',
    exploitAvailable: true,
    patchAvailable: true,
    assignedTo: 'Cloud Team',
    lastUpdated: new Date('2024-03-10'),
    tags: ['ssrf', 'network', 'cloud']
  }
];

export default mockVulnerabilities; 